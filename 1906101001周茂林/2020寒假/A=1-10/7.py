'''
“饱了么”外卖系统中维护着N家外卖店，编号1~N。每家外卖店都有一个优先级，初始时(0时刻)优先级都为0。
每经过1个时间单位，如果外卖唐没有订单，则优先级会减少1，最低减到0;而如果外卖店有订单，则优先级不减反加，每有一单优先级加2。
如果某家外卖店某时刻优先级大于5，则会被系统加入优先缓存中;如果优先级小于等于3，则会被清除出优先缓存。
给定T时刻以内的M条订单信息，请你计算T时刻时有多少外卖店在优先缓存中。
【输入格式】
第一行包含3个整数N、M和T。
以下M行每行包含两个整数t和id，表示ts时刻编号id的外卖唐收到一个订单
【输出格式】
输出一个整数代表答案。
【样例输入】
2 6 6
1 1
5 2
3 1
6 2
2 1
6 2
【样例输出】
1
【样例解释】
6时刻时，1号店优先级降到3，被移除出优先缓存;2号唐优先级升到6加入优先缓存。所以是有1家店(2号)在优先缓存中。
'''
N, M, T = 2, 6, 6
lis = [0 for i in range(N)]
dic = {}
for i in range(M):
    a, b = map(int, input().split())
    dic['a'] = b
for i in range(1, T+1):
    lis1 = []
    for k, v in dic.items():
        if i == k:
            lis1.append(v)
    for p in lis1:
        lis[p-1] += 2
    for j in range(1, N+1):
        if j not in lis1:
            lis[j-1] -= 1
n = 0
for i in lis:
    if i >= 5:
        n += 1
print(n)

