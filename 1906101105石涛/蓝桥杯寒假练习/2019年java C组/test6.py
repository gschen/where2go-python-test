# coding=utf-8

'''
试题 F: 旋转
本题总分：15 分
【问题描述】
图片旋转是对图片最简单的处理方式之一，在本题中，你需要对图片顺时 针旋转 90 度。 我们用一个 n×m 的二维数组来表示一个图片，
例如下面给出一个 3×4 的 图片的例子：
1 3 5 7 
9 8 7 6 
3 5 9 7
这个图片顺时针旋转 90 度后的图片如下：
3 9 1
5 8 3 
9 7 5 
7 6 7
给定初始图片，请计算旋转后的图片。
【输入格式】
输入的第一行包含两个整数 n 和 m，分别表示行数和列数。 接下来 n 行，每行 m 个整数，表示给定的图片。图片中的每个元素（像 素）
为一个值为 0 至 255 之间的整数（包含 0 和 255）。
【输出格式】
输出 m 行 n 列，表示旋转后的图片。
试题F: 旋转 7
第十届蓝桥杯大赛软件类省赛 Java 大学 C 组
【样例输入】 3 4 1 3 5 7 9 8 7 6 3 5 9 7
【样例输出】 3 9 1 5 8 3 9 7 5 7 6 7
【评测用例规模与约定】 对于 30% 的评测用例，1≤n,m≤10。 对于 60% 的评测用例，1≤n,m≤30。 对于所有评测用例，1≤n,m≤100。
'''
# (思路：按它的位置相应的取到对脚上的数字就可以了)
n,m=map(int,input().split(' '))
l=input().split(' ')
L=[]
k=0
nn=n
for i in range(m):
    while nn>0:
        if k>n:
            break
        L.append(l[(nn-1)*m+k])
        nn-=1
    k+=1
    nn=n
print(' '.join(L))